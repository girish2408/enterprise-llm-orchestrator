# Multi-stage build for Frontend + Backend
FROM node:20-alpine AS base

# Install pnpm
RUN npm install -g pnpm

# ==================== BACKEND BUILD ====================
FROM base AS backend

WORKDIR /app/backend

# Copy backend files
COPY package.json pnpm-lock.yaml ./
COPY src/ ./src/
COPY prisma/ ./prisma/
COPY tsconfig.json ./

# Install backend dependencies
RUN pnpm install --frozen-lockfile

# Build backend
RUN pnpm build

# ==================== FRONTEND BUILD ====================
FROM base AS frontend

WORKDIR /app/frontend

# Copy frontend files
COPY frontend/package.json frontend/pnpm-lock.yaml ./
COPY frontend/ ./

# Install frontend dependencies
RUN pnpm install --frozen-lockfile

# Build frontend
RUN pnpm build

# ==================== PRODUCTION ====================
FROM base AS production

WORKDIR /app

# Copy backend build
COPY --from=backend /app/backend/dist ./dist
COPY --from=backend /app/backend/package.json ./package.json
COPY --from=backend /app/backend/node_modules ./node_modules
COPY --from=backend /app/backend/prisma ./prisma

# Copy frontend build
COPY --from=frontend /app/frontend/dist ./public

# Install serve for static files
RUN npm install -g serve

# Expose port
EXPOSE $PORT

# Start both backend and frontend
CMD ["sh", "-c", "pnpm start:prod & serve -s public -l $PORT --single"]
